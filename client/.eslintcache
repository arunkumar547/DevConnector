[{"E:\\react\\DevConnector\\client\\src\\index.js":"1","E:\\react\\DevConnector\\client\\src\\App.js":"2","E:\\react\\DevConnector\\client\\src\\components\\layout\\Navbar.js":"3","E:\\react\\DevConnector\\client\\src\\components\\layout\\Landing.js":"4","E:\\react\\DevConnector\\client\\src\\components\\auth\\Register.js":"5","E:\\react\\DevConnector\\client\\src\\components\\auth\\Login.js":"6","E:\\react\\DevConnector\\client\\src\\store.js":"7","E:\\react\\DevConnector\\client\\src\\reducers\\index.js":"8","E:\\react\\DevConnector\\client\\src\\reducers\\alert.js":"9","E:\\react\\DevConnector\\client\\src\\actions\\types.js":"10","E:\\react\\DevConnector\\client\\src\\actions\\alert.js":"11","E:\\react\\DevConnector\\client\\src\\components\\layout\\Alert.js":"12","E:\\react\\DevConnector\\client\\src\\actions\\auth.js":"13","E:\\react\\DevConnector\\client\\src\\reducers\\auth.js":"14","E:\\react\\DevConnector\\client\\src\\utils\\setAuthToken.js":"15","E:\\react\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js":"16","E:\\react\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js":"17","E:\\react\\DevConnector\\client\\src\\reducers\\profile.js":"18","E:\\react\\DevConnector\\client\\src\\actions\\profile.js":"19","E:\\react\\DevConnector\\client\\src\\components\\layout\\Spinner.js":"20","E:\\react\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","E:\\react\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"22","E:\\react\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"23","E:\\react\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"24","E:\\react\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"25","E:\\react\\DevConnector\\client\\src\\components\\dashboard\\Experience.js":"26","E:\\react\\DevConnector\\client\\src\\components\\dashboard\\Education.js":"27","E:\\react\\DevConnector\\client\\src\\components\\profiles\\Profiles.js":"28","E:\\react\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js":"29","E:\\react\\DevConnector\\client\\src\\components\\profile\\Profile.js":"30","E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileTop.js":"31","E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileAbout.js":"32","E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileExperience.js":"33","E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileEducation.js":"34","E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileGithub.js":"35"},{"size":198,"mtime":1609768400124,"results":"36","hashOfConfig":"37"},{"size":2126,"mtime":1616933958189,"results":"38","hashOfConfig":"37"},{"size":1462,"mtime":1616928536095,"results":"39","hashOfConfig":"37"},{"size":1139,"mtime":1613569014257,"results":"40","hashOfConfig":"37"},{"size":3628,"mtime":1609937697099,"results":"41","hashOfConfig":"37"},{"size":2084,"mtime":1613557734632,"results":"42","hashOfConfig":"37"},{"size":396,"mtime":1609769157682,"results":"43","hashOfConfig":"37"},{"size":208,"mtime":1613560374431,"results":"44","hashOfConfig":"37"},{"size":463,"mtime":1609937203009,"results":"45","hashOfConfig":"37"},{"size":708,"mtime":1616927607412,"results":"46","hashOfConfig":"37"},{"size":346,"mtime":1609838635612,"results":"47","hashOfConfig":"37"},{"size":568,"mtime":1609937117151,"results":"48","hashOfConfig":"37"},{"size":2318,"mtime":1613631939554,"results":"49","hashOfConfig":"37"},{"size":1292,"mtime":1616915968046,"results":"50","hashOfConfig":"37"},{"size":255,"mtime":1609918124637,"results":"51","hashOfConfig":"37"},{"size":1997,"mtime":1616931469912,"results":"52","hashOfConfig":"37"},{"size":575,"mtime":1613558853625,"results":"53","hashOfConfig":"37"},{"size":995,"mtime":1616928501721,"results":"54","hashOfConfig":"37"},{"size":6335,"mtime":1616931600715,"results":"55","hashOfConfig":"37"},{"size":247,"mtime":1613568769347,"results":"56","hashOfConfig":"37"},{"size":8867,"mtime":1616905581414,"results":"57","hashOfConfig":"37"},{"size":724,"mtime":1616905353781,"results":"58","hashOfConfig":"37"},{"size":10168,"mtime":1616931502158,"results":"59","hashOfConfig":"37"},{"size":3353,"mtime":1616933163302,"results":"60","hashOfConfig":"37"},{"size":3420,"mtime":1616933138924,"results":"61","hashOfConfig":"37"},{"size":1632,"mtime":1616915879521,"results":"62","hashOfConfig":"37"},{"size":1625,"mtime":1616916121585,"results":"63","hashOfConfig":"37"},{"size":1420,"mtime":1616931439323,"results":"64","hashOfConfig":"37"},{"size":1004,"mtime":1616930176098,"results":"65","hashOfConfig":"37"},{"size":2962,"mtime":1616936584819,"results":"66","hashOfConfig":"37"},{"size":1351,"mtime":1616934918624,"results":"67","hashOfConfig":"37"},{"size":715,"mtime":1616935250466,"results":"68","hashOfConfig":"37"},{"size":661,"mtime":1616935647973,"results":"69","hashOfConfig":"37"},{"size":669,"mtime":1616935947422,"results":"70","hashOfConfig":"37"},{"size":1718,"mtime":1616936941342,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"hb8wwa",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},"E:\\react\\DevConnector\\client\\src\\index.js",[],["148","149"],"E:\\react\\DevConnector\\client\\src\\App.js",[],"E:\\react\\DevConnector\\client\\src\\components\\layout\\Navbar.js",[],"E:\\react\\DevConnector\\client\\src\\components\\layout\\Landing.js",[],"E:\\react\\DevConnector\\client\\src\\components\\auth\\Register.js",[],"E:\\react\\DevConnector\\client\\src\\components\\auth\\Login.js",[],"E:\\react\\DevConnector\\client\\src\\store.js",[],"E:\\react\\DevConnector\\client\\src\\reducers\\index.js",[],"E:\\react\\DevConnector\\client\\src\\reducers\\alert.js",[],["150","151"],"E:\\react\\DevConnector\\client\\src\\actions\\types.js",[],"E:\\react\\DevConnector\\client\\src\\actions\\alert.js",[],"E:\\react\\DevConnector\\client\\src\\components\\layout\\Alert.js",[],"E:\\react\\DevConnector\\client\\src\\actions\\auth.js",[],"E:\\react\\DevConnector\\client\\src\\reducers\\auth.js",[],"E:\\react\\DevConnector\\client\\src\\utils\\setAuthToken.js",[],"E:\\react\\DevConnector\\client\\src\\components\\dashboard\\Dashboard.js",[],"E:\\react\\DevConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\react\\DevConnector\\client\\src\\reducers\\profile.js",["152"],"import { CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, GET_REPOS,\r\n    GET_PROFILES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n            return { ...state, profile: payload, loading: false }\r\n        case GET_PROFILES:\r\n            return { ...state, profiles: payload, loading: false }\r\n        case UPDATE_PROFILE:\r\n            return { ...state, profile: payload, loading: false }\r\n        case PROFILE_ERROR:\r\n            return { ...state, error: payload, loading: false };\r\n        case CLEAR_PROFILE:\r\n            return { ...state, profile: null, repos: [], loading: false }\r\n        case GET_REPOS:\r\n            return { ...state, repos: payload, loading: false }\r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\react\\DevConnector\\client\\src\\actions\\profile.js",[],"E:\\react\\DevConnector\\client\\src\\components\\layout\\Spinner.js",["153"],"\r\nimport React, { Fragment } from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img src={spinner} style={{width:'200px', margin:'auto', display:'block'}} alt=\"loading....\" />\r\n    </Fragment>\r\n)\r\n","E:\\react\\DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"E:\\react\\DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["154"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile'\r\n\r\nconst EditProfile = ({\r\n    profile: { profile, loading },\r\n    createProfile,\r\n    getCurrentProfile,\r\n    history\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    })\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills,\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        })\r\n    }, [loading,getCurrentProfile])\r\n\r\n    const { company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram, } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history,true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Edit Your Profile</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\" /> Add some changes to your profile\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={onChange}>\r\n                        <option>* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\">\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Company\"\r\n                        name=\"company\"\r\n                        value={company}\r\n                        onChange={onChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Website\"\r\n                        name=\"website\"\r\n                        value={website}\r\n                        onChange={onChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own or a company website\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        onChange={onChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        City & state suggested (eg. Boston, MA)\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Skills\"\r\n                        name=\"skills\"\r\n                        value={skills}\r\n                        onChange={onChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername}\r\n                        onChange={onChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        If you want your latest repos and a Github link, include your\r\n                        username\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        placeholder=\"A short bio of yourself\"\r\n                        name=\"bio\"\r\n                        value={bio}\r\n                        onChange={onChange}\r\n                    />\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-light\"\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\" />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Twitter URL\"\r\n                                name=\"twitter\"\r\n                                value={twitter}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\" />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Facebook URL\"\r\n                                name=\"facebook\"\r\n                                value={facebook}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\" />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"YouTube URL\"\r\n                                name=\"youtube\"\r\n                                value={youtube}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\" />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Linkedin URL\"\r\n                                name=\"linkedin\"\r\n                                value={linkedin}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\" />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Instagram URL\"\r\n                                name=\"instagram\"\r\n                                value={instagram}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile))\r\n","E:\\react\\DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js",[],"E:\\react\\DevConnector\\client\\src\\components\\dashboard\\Experience.js",[],"E:\\react\\DevConnector\\client\\src\\components\\dashboard\\Education.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profiles\\Profiles.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profiles\\ProfileItem.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profile\\Profile.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileTop.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileAbout.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileExperience.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileEducation.js",[],"E:\\react\\DevConnector\\client\\src\\components\\profile\\ProfileGithub.js",["155"],"import React, {Fragment,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getGithubRepos } from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst ProfileGithub = ({getGithubRepos,username,repos}) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n      }, [getGithubRepos, username]);\r\n    \r\n      return (\r\n        <div className=\"profile-github\">\r\n          <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n          {repos===null ? <Spinner/>:repos.map(repo => (\r\n            <div key={repo.id} className=\"repo bg-white p-1 my-1\">\r\n              <div>\r\n                <h4>\r\n                  <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {repo.name}\r\n                  </a>\r\n                </h4>\r\n                <p>{repo.description}</p>\r\n              </div>\r\n              <div>\r\n                <ul>\r\n                  <li className=\"badge badge-primary\">\r\n                    Stars: {repo.stargazers_count}\r\n                  </li>\r\n                  <li className=\"badge badge-dark\">\r\n                    Watchers: {repo.watchers_count}\r\n                  </li>\r\n                  <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos:PropTypes.func.isRequired,\r\n    repos:PropTypes.array.isRequired,\r\n    username:PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps =state=>({\r\n    repos:state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps,{getGithubRepos})(ProfileGithub)\r\n",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"156","replacedBy":"160"},{"ruleId":"158","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":12,"column":1,"nodeType":"164","endLine":31,"endColumn":2},{"ruleId":"162","severity":1,"message":"165","line":5,"column":1,"nodeType":"164","endLine":9,"endColumn":2},{"ruleId":"166","severity":1,"message":"167","line":47,"column":8,"nodeType":"168","endLine":47,"endColumn":35,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":16,"nodeType":"172","messageId":"173","endLine":1,"endColumn":24},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],["174"],["175"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["176"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"179","text":"180"},[1823,1850],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]"]